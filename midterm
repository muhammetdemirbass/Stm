#include "stm32f10x.h"
#include "delay.h" // Gerekli kütüphaneler eklendi

GPIO_InitTypeDef GPIO_InitStructure; 
TIM_TimeBaseInitTypeDef TIM_TimeBaseStructure;
TIM_OCInitTypeDef TIM_OCInitStructure; 
NVIC_InitTypeDef NVIC_InitStructure;

// Fonksiyonlarin çalisabilmesi için tanimlamalar yapildi


void configureNVIC(void);
void ConfigureTIM2(void);
void configureGPIO(void);
void configureTIM2(void);
int state=0; // Ilk durumun case 0 olmasi icin state 0'a esitlendi
int zaman=0;
int zaman2=0;
int kirmizi = 0, sari = 0, yesil = 0;
int a=0;




int main(void)
{
	
	RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM2, ENABLE); // TIM2 için clock aktiflestirildi
	RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA | RCC_APB2Periph_AFIO, ENABLE); // A pini ve alternatif fonksiyon için clock aktiflestirildi
	delayInit();
	configureGPIO();
  configureTIM2(); // Tanimlamalarin yapildigi fonksiyonlar çagrildi
	ConfigureTIM2();
	configureNVIC();
	while (1)
	{
		
		 if(zaman>=20)
		 {
			 GPIO_ResetBits(GPIOA, GPIO_Pin_0); 
			GPIO_SetBits(GPIOA, GPIO_Pin_1); 
			 
		 }
		 
		
				
	
	}
}
void configureGPIO(void) 
{
	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0 | GPIO_Pin_1 | GPIO_Pin_2; // LED pinleri tanimlandi (A0,A1,A2)
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP; // PWM olarak kullanilacagi icin AF olarak ayarlandi
	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_2MHz;
	GPIO_Init(GPIOA, &GPIO_InitStructure);	
	
	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_3 | GPIO_Pin_4 | GPIO_Pin_5; // Buton pinleri tanimlandi (A3,A4,A5)
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPD; // Pull down
	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_2MHz;
	GPIO_Init(GPIOA, &GPIO_InitStructure);
	
}

void configureTIM2(void)
{
	
	TIM_TimeBaseStructure.TIM_Period = 35999; // 72000000/36000*20 = 100 Hz
  TIM_TimeBaseStructure.TIM_Prescaler = 19;
  TIM_TimeBaseStructure.TIM_ClockDivision = 0;
  TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;
  TIM_TimeBaseInit(TIM2, &TIM_TimeBaseStructure);
		
	TIM_OCInitStructure.TIM_OCMode = TIM_OCMode_PWM1; 
	TIM_OCInitStructure.TIM_OCPolarity = TIM_OCPolarity_High; 
	TIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Enable;
	TIM_OCInitStructure.TIM_Pulse = 0; 
	TIM_OC1Init(TIM2, &TIM_OCInitStructure); // 1. LED'in pini A0 oldugu icin Channel 1 olarak ayarlandi
	
	TIM_OCInitStructure.TIM_OCMode = TIM_OCMode_PWM1;  
	TIM_OCInitStructure.TIM_OCPolarity = TIM_OCPolarity_High; 
	TIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Enable; 
	TIM_OCInitStructure.TIM_Pulse = 0;
	TIM_OC2Init(TIM2, &TIM_OCInitStructure); // 2. LED'in pini A1 oldugu icin Channel 2 olarak ayarlandi
	
	TIM_OCInitStructure.TIM_OCMode = TIM_OCMode_PWM1;  
	TIM_OCInitStructure.TIM_OCPolarity = TIM_OCPolarity_High; 
	TIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Enable; 
	TIM_OCInitStructure.TIM_Pulse = 0;
	TIM_OC3Init(TIM2, &TIM_OCInitStructure); // 3. LED'in pini A2 oldugu icin Channel 3 olarak ayarlandi

  TIM_Cmd(TIM2, ENABLE); // TIM2 aktif edildi
	
}

void TIM2_IRQHandler(void)
{

	
	if (TIM_GetITStatus(TIM2,TIM_IT_Update)==SET)
		
	{ 
   zaman++;
		
	TIM_ClearITPendingBit(TIM2, TIM_IT_Update);		
	
	}

}
void ConfigureTIM2(void){
	
	TIM_TimeBaseStructure.TIM_Period = 499; // 72000000/((1999+1)*(35999+1)) = 1 Hertz = 1 second
	TIM_TimeBaseStructure.TIM_Prescaler = 35999;
	TIM_TimeBaseStructure.TIM_ClockDivision = 0;
	TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;
	TIM_TimeBaseInit(TIM2, &TIM_TimeBaseStructure);
	
	TIM_ITConfig(TIM2, TIM_IT_Update, ENABLE);
	TIM_Cmd(TIM2, ENABLE);
	
}
void configureNVIC(void){
	
	
	
	NVIC_InitStructure.NVIC_IRQChannel = TIM2_IRQn; 
	NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0x00;
	NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0x00;
	NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
	NVIC_Init(&NVIC_InitStructure);
}